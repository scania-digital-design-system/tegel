//@import '../theme/core/spacing/vars';
@import '../../../../../../grid-deprecated/vars';
@import '../../../mixins/focus-state';
@import '../../../../../../typography/utilities/typography-utility';

:host {
  display: block;

  .component {
    ::slotted(a),
    ::slotted(button) {
      all: unset;
      box-sizing: border-box;
      height: var(--side-menu-single-item-height);
      width: 100%;
      display: flex;
      align-items: center;
      gap: 10px;
      padding: var(--component-side-menu-space-sub-menu-item-top-and-bottom)
        var(--component-side-menu-space-sub-menu-item-chevron-right-padding)
        var(--component-side-menu-space-sub-menu-item-top-and-bottom)
        var(--component-side-menu-space-sub-menu-item-left);
      border: none;
      background-color: var(--tds-sidebar-side-menu-background-cover);
      color: var(--side-menu-single-item-color);
      cursor: pointer;
      border-radius: var(--component-side-menu-radius-corner);
    }

    ::slotted(tds-side-menu-user),
    &-has-user ::slotted(button) {
      all: unset;
      box-sizing: border-box;
      height: var(--side-menu-single-item-height);
      width: 100%;
      display: flex;
      align-items: center;
      gap: var(--component-side-menu-space-sub-menu-item-profile-gap);
      padding: var(--component-side-menu-space-sub-menu-item-profile-top-bottom)
        var(--component-side-menu-space-sub-menu-item-chevron-right-padding)
        var(--component-side-menu-space-sub-menu-item-profile-top-bottom)
        var(--component-side-menu-space-sub-menu-item-profile-left);
      border: none;
      background-color: var(--tds-sidebar-side-menu-background-cover);
      color: var(--side-menu-single-item-color);
      cursor: pointer;
      border-radius: var(--component-side-menu-radius-corner);
    }

    tds-icon {
      color: red !important;
    }

    ::slotted(a:focus-visible),
    ::slotted(button:focus-visible) {
      @include tds-focus-state-side-menu;
    }

    &:hover {
      ::slotted(a),
      ::slotted(button) {
        background-color: var(--side-menu-item-state-hover);
      }
    }

    &:active {
      ::slotted(a),
      ::slotted(button) {
        background-color: var(--side-menu-item-state-active);
      }
    }

    &-collapsed {
      ::slotted(a),
      ::slotted(button) {
        padding: var(--component-side-menu-space-collapsed-item-left-right-inner-icon-padding);
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
      }
    }

    &-selected:not(&-active) {
      ::slotted(a),
      ::slotted(button),
      ::slotted(tds-side-menu-user) {
        position: relative;
        background-color: var(--side-menu-item-state-selected);

        &::before {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          width: var(--component-side-menu-space-sub-page-selected-marker-width);
          height: var(--component-side-menu-space-sub-menu-item-selected-marker-height);
          background-color: var(--side-menu-single-subitem-selected-border-color);
          border-radius: var(--component-side-menu-radius-corner) 0 0
            var(--component-side-menu-radius-corner);
        }
      }
    }
  }
}

@media (min-width: $grid-lg) {
  :host {
    .component.component-collapsed {
      ::slotted(a),
      ::slotted(button) {
        color: rgb(90 90 90 / 0%);
        overflow: hidden;
      }
    }
  }
}
