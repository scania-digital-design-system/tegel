@import '../../../../../typography/utilities/typography-utility';

:host-context(.scania) .form-text-field {
  /* Textfield: units */
  --textfield-border-radius: 4px 4px 0 0;

  /* Textfield: border colors */
  --textfield-border-color-left: transparent;
  --textfield-border-color-right: transparent;
  --textfield-border-color-bottom: var(--color-foreground-border-soft);
  --textfield-border-color-top: transparent;

  /* Textfield: border colors on hover */
  --textfield-border-color-left-hover: transparent;
  --textfield-border-color-right-hover: transparent;
  --textfield-border-color-bottom-hover: var(--color-foreground-border-strong);
  --textfield-border-color-top-hover: transparent;

  /* Textfield: border colors on success */
  --textfield-border-color-left-success: transparent;
  --textfield-border-color-right-success: transparent;
  --textfield-border-color-bottom-success: var(--color-foreground-border-strong);
  --textfield-border-color-top-success: transparent;

  /* Textfield: border colors on focus */
  --textfield-border-color-left-focus: transparent;
  --textfield-border-color-right-focus: transparent;
  --textfield-border-color-bottom-focus: var(--color-foreground-border-strong);
  --textfield-border-color-top-focus: transparent;
  --textfield-outline-color-focus: none;

  /* Textfield: border colors on error */
  --textfield-border-color-left-error: transparent;
  --textfield-border-color-right-error: transparent;
  --textfield-border-color-bottom-error: var(--color-system-danger-default);
  --textfield-border-color-top-error: transparent;

  /* Textfield: bar colors */
  --textfield-bar-color-focus: var(--color-foreground-border-accent-focus);
  --textfield-bar-color-error: var(--color-system-danger-default);
}

:host-context(.traton) .form-text-field {
  /* Textfield: units */
  --textfield-border-radius: 4px 4px 4px 4px;

  /* Textfield: border colors */
  --textfield-border-color-left: var(--color-foreground-border-soft);
  --textfield-border-color-right: var(--color-foreground-border-soft);
  --textfield-border-color-bottom: var(--color-foreground-border-soft);
  --textfield-border-color-top: var(--color-foreground-border-soft);

  /* Textfield: border colors on hover */
  --textfield-border-color-left-hover: var(--color-foreground-border-strong);
  --textfield-border-color-right-hover: var(--color-foreground-border-strong);
  --textfield-border-color-bottom-hover: var(--color-foreground-border-strong);
  --textfield-border-color-top-hover: var(--color-foreground-border-strong);

  /* Textfield: border colors on success */
  --textfield-border-color-left-success: var(--color-foreground-border-strong);
  --textfield-border-color-right-success: var(--color-foreground-border-strong);
  --textfield-border-color-bottom-success: var(--color-foreground-border-strong);
  --textfield-border-color-top-success: var(--color-foreground-border-strong);

  /* Textfield: border colors on focus */
  --textfield-border-color-left-focus: var(--color-foreground-border-accent-focus);
  --textfield-border-color-right-focus: var(--color-foreground-border-accent-focus);
  --textfield-border-color-bottom-focus: var(--color-foreground-border-accent-focus);
  --textfield-border-color-top-focus: var(--color-foreground-border-accent-focus);
  --textfield-outline-color-focus: var(--color-foreground-border-accent-focus);

  /* Textfield: border colors on error */
  --textfield-border-color-left-error: var(--color-system-danger-default);
  --textfield-border-color-right-error: var(--color-system-danger-default);
  --textfield-border-color-bottom-error: var(--color-system-danger-default);
  --textfield-border-color-top-error: var(--color-system-danger-default);

  /* Textfield: bar colors */
  --textfield-bar-color-focus: transparent;
  --textfield-bar-color-error: transparent;
}

.form-text-field {
  // Base colors
  --background-primary: var(--color-background-layer-01);
  --background-secondary: var(--color-background-layer-02);
  --background: var(--background-primary);
  --text-color: var(--color-foreground-text-strong);
  --placeholder: var(--color-foreground-text-subtle);
  --affix-color: var(--color-foreground-text-defined);

  // Label colors
  --label-color: var(--color-foreground-text-strong);
  --label-inside-color: var(--color-foreground-text-strong);

  // Border colors
  --border-bottom-readonly: var(--color-foreground-border-strong);

  // Helper text
  --helper: var(--color-foreground-text-defined);

  // Error state
  --helper-error: var(--color-system-danger-default);
  --affix-color-error: var(--color-foreground-text-defined);

  // Disabled state
  --background-disabled-primary: var(--color-background-layer-01);
  --background-disabled-secondary: var(--color-background-layer-02);
  --background-disabled: var(--background-disabled-primary);
  --text-color-disabled: var(--color-foreground-text-subtle);
  --placeholder-disabled: var(--color-foreground-text-subtle);
  --label-disabled: var(--color-foreground-text-subtle);
  --affix-color-disabled: var(--color-foreground-text-disabled);
  --helper-disabled: var(--color-foreground-text-disabled);

  // Read only state
  --icon-read-only-label-color: var(--color-foreground-text-strong);
  --icon-read-only-label-background: var(--color-system-info-subtle);

  // Text counter
  --textcounter: var(--color-foreground-text-defined);
  --textcounter-disabled: var(--color-foreground-text-disabled);
  --textcounter-divider: var(--color-foreground-text-disabled);

  .tds-mode-variant-primary {
    --background: var(--background-primary);
    --background-disabled: var(--background-disabled-primary);
  }

  .tds-mode-variant-secondary {
    --background: var(--background-secondary);
    --background-disabled: var(--background-disabled-secondary);
  }
}

@mixin text-field-base {
  all: unset;
  border-radius: var(--textfield-border-radius);
  width: 100%;
  box-sizing: border-box;
  margin: 0;
  border: none;
  outline: none;
  height: 100%;
  color: var(--text-color);
  background-color: var(--background);

  &::placeholder {
    color: var(--placeholder);
  }

  &:disabled {
    user-select: none;
    pointer-events: none;
    background-color: var(--background-disabled);
    color: var(--text-color-disabled);

    &::placeholder {
      color: var(--placeholder-disabled);
    }

    ~ .text-field-label-inside {
      color: var(--label-disabled);
    }
  }
}

.text-field-input {
  @include text-field-base;
  @include detail-02;
}

//Sizes
.text-field-input-lg {
  padding: var(--tds-spacing-element-20) var(--tds-spacing-element-16);
}

.text-field-input-md {
  padding: var(--tds-spacing-element-16);
}

.text-field-input-sm {
  padding: var(--tds-spacing-element-16);
}

//Container for input field and prefix/suffix
.text-field-container {
  border-radius: var(--textfield-border-radius);
  display: flex;
  position: relative;
  height: 56px;
  box-sizing: border-box;
  background-color: var(--background);
  border-left: 1px solid var(--textfield-border-color-left);
  border-right: 1px solid var(--textfield-border-color-right);
  border-bottom: 1px solid var(--textfield-border-color-bottom);
  border-top: 1px solid var(--textfield-border-color-top);
  transition: border-bottom-color 200ms ease, border-left-color 200ms ease,
    border-right-color 200ms ease, border-top-color 200ms ease, outline-color 200ms ease;

  &:hover {
    border-left: 1px solid var(--textfield-border-color-left-hover);
    border-right: 1px solid var(--textfield-border-color-right-hover);
    border-bottom: 1px solid var(--textfield-border-color-bottom-hover);
    border-top: 1px solid var(--textfield-border-color-top-hover);
  }

  .form-text-field-md & {
    height: 48px;
  }

  .form-text-field-sm & {
    height: 40px;
  }
}

.text-field-input-container {
  position: relative;
  width: 100%;
}

.text-field-data,
.text-field-input {
  color: var(--text-color);
}

//text-field label

.text-field-label-outside > * {
  @include detail-05;

  display: block;
  margin-bottom: var(--tds-spacing-element-8);
  color: var(--label-color);
}

.text-field-label-inside {
  @include detail-02;

  position: absolute;
  pointer-events: none;
  color: var(--label-inside-color);
  left: 16px;
}

@mixin placeholder-label {
  &::placeholder {
    color: transparent;
  }

  ::placeholder {
    color: transparent;
  }

  //Input field in focus
  &:focus::placeholder {
    transition: color 0.35s ease;
    color: var(--placeholder);
  }
}

@mixin label-inside-transition {
  transition: 0.1s ease all;
}

//Form control
.form-text-field {
  display: block;
  min-width: 208px;

  &-nomin {
    min-width: auto;
  }
}

//text-field container with label inside
//Handling position, focus and transition for label inside
.form-text-field.text-field-container-label-inside {
  .text-field-input-lg {
    padding-top: var(--tds-spacing-element-24);
    padding-bottom: 15px;

    ~ .text-field-label-inside {
      top: 20px;
    }

    @include placeholder-label;
  }

  .text-field-input-md,
  .text-field-input-sm {
    padding-top: var(--tds-spacing-element-20);
    padding-bottom: 11px;

    ~ .text-field-label-inside {
      top: 16px;
    }

    @include placeholder-label;
  }

  &.text-field-focus,
  &.text-field-data {
    .text-field-label-inside {
      @include detail-07;
      @include label-inside-transition;
    }

    .text-field-input-sm ~ .text-field-label-inside,
    .text-field-input-md ~ .text-field-label-inside {
      top: 8px;
    }

    .text-field-input-lg ~ .text-field-label-inside {
      top: 12px;
    }
  }
}

//text-field bottom bar when in focus
.text-field-bar {
  position: relative;
  width: 100%;
  left: 0;
  z-index: 1;

  &::after {
    content: '';
    height: 2px;
    width: 100%;
    bottom: 0;
    position: absolute;
    background: var(--textfield-bar-color-focus);
    transform: scaleX(0);
    transition: 0.35s ease transform;
  }
}

/* General focus state */
.form-text-field {
  &.text-field-focus {
    .text-field-container {
      border-left: 1px solid var(--textfield-border-color-left-focus);
      border-right: 1px solid var(--textfield-border-color-right-focus);
      border-bottom: 1px solid var(--textfield-border-color-bottom-focus);
      border-top: 1px solid var(--textfield-border-color-top-focus);
      outline: 2px solid var(--textfield-outline-color-focus);
      outline-offset: -1px;
    }

    .text-field-bar::after {
      transform: scaleX(1);
    }
  }
}

//Helper text
.text-field-helper {
  @include detail-05;

  display: flex;
  gap: 8px;
  justify-content: space-between;

  & .text-field-textcounter {
    margin-left: auto;
  }

  flex-basis: 100%;
  padding-top: var(--tds-spacing-element-4);
  color: var(--helper);
}

//Disabled state
.form-text-field-disabled {
  .text-field-container {
    cursor: not-allowed;
    border-left: 1px solid transparent;
    border-right: 1px solid transparent;
    border-bottom: 1px solid transparent;
    border-top: 1px solid transparent;
  }

  .text-field-slot-wrap-prefix,
  .text-field-slot-wrap-suffix {
    > * {
      color: var(--affix-color-disabled);
    }
  }

  .text-field-label-outside {
    > * {
      color: var(--label-disabled);
    }
  }

  .text-field-helper {
    color: var(--helper-disabled);
  }
}

//Read only state

.text-field-icon__readonly {
  display: none;
  position: absolute;
  right: 18px;
  top: 50%;
  transform: translateY(-50%);
  color: var(--icon-read-only-label-color);

  &-label {
    display: none;
    position: absolute;
    right: 18px;
    top: 48px;
    @include detail-05;

    padding: 8px;
    white-space: nowrap;
    border-radius: 4px 0 4px 4px;
    background-color: var(--icon-read-only-label-background);
  }
}

.form-text-field-readonly {
  user-select: auto; /* Allow text selection */
  caret-color: transparent; /* Hide blinking cursor */
  cursor: default;

  .text-field-container {
    border-bottom-color: var(--border-bottom-readonly);
  }

  .text-field-icon__readonly {
    display: block;

    &:hover {
      ~ .text-field-icon__readonly-label {
        display: block;
      }
    }
  }

  .text-field-input {
    background-color: transparent;
  }
}

// Only add padding if the readonly icon is present
.form-text-field-readonly:has(.text-field-icon__readonly) .text-field-input {
  padding-right: 54px;
}

//Success state
.form-text-field-success:not(.form-text-field-readonly) {
  .text-field-container {
    border-left: 1px solid var(--textfield-border-color-left-success);
    border-right: 1px solid var(--textfield-border-color-right-success);
    border-bottom: 1px solid var(--textfield-border-color-bottom-success);
    border-top: 1px solid var(--textfield-border-color-top-success);
  }
}

//Error State
.form-text-field-error:not(.form-text-field-readonly) {
  .text-field-helper {
    color: var(--helper-error);
  }

  .text-field-container {
    border-left: 1px solid var(--textfield-border-color-left-error);
    border-right: 1px solid var(--textfield-border-color-right-error);
    border-bottom: 1px solid var(--textfield-border-color-bottom-error);
    border-top: 1px solid var(--textfield-border-color-top-error);
  }

  .text-field-bar {
    &::before,
    &::after {
      background: var(--textfield-bar-color-error);
    }
  }
}

// .text-field-textcounter {
.text-field-helper-error-state {
  display: flex;
  gap: 8px;
  flex-wrap: nowrap;
}

.text-field-textcounter-disabled {
  color: var(--textcounter-disabled);
}

.text-field-textcounter {
  @include detail-02;

  color: var(--textcounter);
  float: right;

  &.text-field-textcounter-disabled {
    color: var(--textcounter-disabled);
  }

  &.text-field-textcounter-divider {
    @include detail-05;

    color: var(--textcounter-divider);
  }

  &.text-field-textcounter-divider-disabled {
    color: var(--textcounter-divider);
  }
}

.text-field-slot-wrap-prefix,
.text-field-slot-wrap-suffix {
  align-self: center;
  @include detail-02;

  margin: 0 0 0 14px;
  color: var(--affix-color);

  &::slotted(:not(tds-icon)) {
    margin: 0 0 0 2px;
  }

  &.text-field-error {
    color: var(--affix-color-error);
  }
}

.text-field-slot-wrap-suffix {
  margin: 0 14px 0 0;

  &::slotted(:not(tds-icon)) {
    margin: 0 2px 0 0;
  }
}
