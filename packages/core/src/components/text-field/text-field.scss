@import './text-field-mixins';

.text-field-input {
  @include text-field-base;
  @include detail-02;
}

//Sizes
.text-field-input-lg {
  padding: var(--tds-spacing-element-20) var(--tds-spacing-element-16);
}

.text-field-input-md {
  padding: var(--tds-spacing-element-16);
}

.text-field-input-sm {
  padding: var(--tds-spacing-element-16);
}

//Container for input field and prefix/suffix
.text-field-container {
  @include box-shadow;

  border-radius: var(--text-field-border-radius);
  display: flex;
  position: relative;
  height: 56px;
  box-sizing: border-box;
  background-color: var(--text-field-background);
  transition: box-shadow 200ms ease;

  &:hover {
    @include box-shadow('hover');
  }

  .form-text-field-md & {
    height: 48px;
  }

  .form-text-field-sm & {
    height: 40px;
  }
}

.text-field-input-container {
  position: relative;
  width: 100%;
}

.text-field-data,
.text-field-input {
  color: var(--text-field-text);
}

//text-field label

.text-field-label-outside > * {
  @include detail-05;

  display: block;
  margin-bottom: var(--tds-spacing-element-8);
  color: var(--text-field-label);
}

.text-field-label-inside {
  @include detail-02;

  position: absolute;
  pointer-events: none;
  color: var(--text-field-label-inside);
  left: 16px;
}

.text-field-label-inside-placeholder {
  color: var(--text-field-placeholder);
}

.form-text-field {
  // compensate for box shadow
  padding-bottom: 1px;
}

//text-field container with label inside
//Handling position, focus and transition for label inside
.form-text-field.text-field-container-label-inside {
  .text-field-input-lg {
    @include placeholder-label;

    padding-top: var(--tds-spacing-element-24);
    padding-bottom: 15px;

    ~ .text-field-label-inside {
      top: 20px;
    }
  }

  .text-field-input-md,
  .text-field-input-sm {
    @include placeholder-label;

    padding-top: var(--tds-spacing-element-20);
    padding-bottom: 11px;

    ~ .text-field-label-inside {
      top: 16px;
    }
  }

  &.text-field-focus,
  &.text-field-data {
    .text-field-label-inside {
      @include detail-07;

      transition: 0.1s ease all;
    }

    .text-field-input-sm ~ .text-field-label-inside,
    .text-field-input-md ~ .text-field-label-inside {
      top: 8px;
    }

    .text-field-input-lg ~ .text-field-label-inside {
      top: 12px;
    }
  }
}

//text-field bottom bar when in focus
.text-field-bar {
  position: relative;
  width: 100%;
  left: 0;
  z-index: 1;

  &::after {
    background: var(--text-field-bar-focus);
    content: '';
    height: 2px;
    width: 100%;
    bottom: 0;
    position: absolute;
    transform: scaleX(0);
    transition: 0.35s ease transform;
  }
}

//Focus state
.form-text-field {
  &.text-field-focus {
    .text-field-container {
      outline: var(--text-field-focus-outline);
      outline-offset: var(--text-field-focus-outline-offset);
    }

    .text-field-bar::after {
      transform: scaleX(1);
    }
  }
}

//Helper text
.text-field-helper {
  @include detail-05;

  color: var(--text-field-helper);
  padding-top: var(--tds-spacing-element-4);
  display: flex;
  gap: 8px;
  justify-content: space-between;
  flex-basis: 100%;

  & .text-field-textcounter {
    margin-left: auto;
  }
}

//Disabled state
.form-text-field-disabled {
  .text-field-container {
    cursor: not-allowed;
    box-shadow: none;
  }

  .text-field-slot-wrap-prefix,
  .text-field-slot-wrap-suffix,
  .text-field-label-outside {
    > * {
      color: var(--text-field-affix-disabled);
    }
  }

  .text-field-label-inside,
  .text-field-helper {
    color: var(--text-field-label-disabled);
  }

  .text-field-input {
    background-color: var(--text-field-background-disabled);
  }
}

//Read only state

.text-field-icon__readonly {
  display: none;
  position: absolute;
  right: 18px;
  top: 50%;
  transform: translateY(-50%);

  & .tds-tooltip {
    min-width: 150px;
  }
}

.form-text-field-readonly {
  user-select: auto; /* Allow text selection */
  caret-color: transparent; /* Hide blinking cursor */
  cursor: default;

  .text-field-container {
    border-bottom-color: var(--text-field-border-bottom-readonly);
  }

  .text-field-icon__readonly {
    display: block;

    &:hover {
      ~ .text-field-icon__readonly-label {
        display: block;
      }
    }
  }

  .text-field-input {
    background-color: transparent;
  }
}

// Only add padding if the readonly icon is present
.form-text-field-readonly:has(.text-field-icon__readonly) .text-field-input {
  padding-right: 54px;
}

//Success state
.form-text-field-success:not(.form-text-field-readonly) {
  .text-field-container {
    @include box-shadow('success');
  }
}

//Error State
.form-text-field-error:not(.form-text-field-readonly) {
  .text-field-helper {
    color: var(--text-field-helper-error);
  }

  .text-field-container {
    @include box-shadow('error');
  }

  .text-field-bar {
    &::before,
    &::after {
      background: var(--text-field-bar-error);
    }
  }
}

// Error state focus
.text-field-focus.form-text-field-error {
  .text-field-container {
    outline: var(--text-field-focus-outline-error);
    outline-offset: var(--text-field-focus-outline-offset);
  }
}

// .text-field-textcounter {
.text-field-helper-error-state {
  display: flex;
  gap: 8px;
  flex-wrap: nowrap;
}

.text-field-textcounter-disabled {
  color: var(--text-field-textcounter-disabled);
}

.text-field-textcounter {
  @include detail-02;

  color: var(--text-field-textcounter);
  float: right;

  &.text-field-textcounter-disabled {
    color: var(--text-field-textcounter-disabled);
  }

  &.text-field-textcounter-divider {
    @include detail-05;

    color: var(--text-field-textcounter-divider);
  }

  &.text-field-textcounter-divider-disabled {
    color: var(--text-field-textcounter-divider);
  }
}

.text-field-slot-wrap-prefix,
.text-field-slot-wrap-suffix {
  @include detail-02;

  color: var(--text-field-affix);
  align-self: center;
  margin: 0 0 0 14px;

  &::slotted(:not(tds-icon)) {
    margin: 0 0 0 2px;
  }

  &.text-field-error {
    color: var(--text-field-affix-error);
  }
}

.text-field-slot-wrap-suffix {
  margin: 0 14px 0 0;

  &::slotted(:not(tds-icon)) {
    margin: 0 2px 0 0;
  }
}
