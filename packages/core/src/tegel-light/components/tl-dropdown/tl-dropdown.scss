@import './tl-dropdown-vars';

//tl-dropdown
.tl-dropdown {
  min-width: 208px;
  position: relative;
}

.tl-dropdown__input-wrapper {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
}

// --- Dropdown Button & Select ---
%tl-dropdown-field {
  @include detail-02;

  width: 100%;
  appearance: none;
  background: var(--dropdown-background);
  color: var(--dropdown-text);
  border-style: solid;
  border-color: var(--dropdown-border);
  border-width: var(--dropdown-border-width, 0 0 1px 0);
  border-radius: var(--dropdown-border-radius);
  box-shadow: none;
  position: relative;
  outline: none;
  text-align: left;
  cursor: pointer;

  // min-width removed to prevent input from exceeding wrapper width
  padding-left: var(--tds-spacing-element-16);
  padding-right: var(--tds-spacing-element-16);
  transition: border-color 0.2s, border-width 0.2s, border-bottom-color 0.2s ease;

  // Default flex layout for button/select
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 0;

  &:focus::placeholder {
    color: transparent;
  }
}

.tl-dropdown__button,
.tl-dropdown__select,
.tl-dropdown__input {
  @extend %tl-dropdown-field;
}

// Basic chevron positioning - specific rules will override
.tl-dropdown__button ~ .tl-icon--chevron_down,
.tl-dropdown__select ~ .tl-icon--chevron_down,
.tl-dropdown__input ~ .tl-icon--chevron_down {
  position: absolute;
  right: var(--tds-spacing-element-16);
  top: 0;
  bottom: 0;
  margin: auto 0;
  pointer-events: none;
  display: flex;
  align-items: center;
  height: var(--tds-spacing-element-16);
  transition: transform 0.2s;
  transform: rotate(0deg);
}

// Hide inside label when input has focus (filter variant, no wrapper)
.tl-dropdown--label-inside .tl-dropdown__input:focus ~ .tl-dropdown__label--inside {
  @include detail-07;

  color: var(--dropdown-label-inside-active, var(--dropdown-label-inside));
  top: var(--dropdown-label-top, 7px);
  transform: none;
}

// Input should not use flex layout or chevron padding
.tl-dropdown__input {
  display: block;
  width: 100%;
  min-width: 0;
  max-width: 100%;
  box-sizing: border-box;
  align-items: unset;
  justify-content: unset;
  padding-right: 40px; // Default: 8px gap + 32px chevron width
  cursor: text;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// When clear icon is visible, add more padding for clear icon + divider + chevron
.tl-dropdown__input:focus:not(:placeholder-shown) {
  padding-right: 72px; // 8px gap + 16px clear + 8px gap + 1px divider + 8px gap + 32px chevron
}

.tl-dropdown__icon--cross {
  display: none;
}

// Show clear and divider only when input is focused and has content
.tl-dropdown__input:focus:not(:placeholder-shown) ~ .tl-dropdown__icon--cross {
  display: flex;
  position: absolute;
  right: 48px;
  top: 0;
  bottom: 0;
  margin: auto 0;
  cursor: pointer;
  pointer-events: auto;
  z-index: 2;
  color: var(--dropdown-clear-icon);
}

.tl-dropdown__input--divider {
  position: absolute;
  right: 40px;
  top: 50%;
  height: 16px;
  transform: translateY(-50%);
  bottom: unset;
  width: 1px;
  background: var(--dropdown-clear-icon, #e0e0e0);
  z-index: 1;
  display: none;
}

.tl-dropdown__input--divider--visible {
  display: block;
}

.tl-dropdown__input:focus:not(:placeholder-shown) ~ .tl-dropdown__input--divider {
  display: block;
  position: absolute;
  right: 40px;
  top: 50%;
  height: 16px;
  transform: translateY(-50%);
  bottom: unset;
  width: 1px;
  background: var(--dropdown-clear-icon, #e0e0e0);
  z-index: 1;
}

// --- Size variants ---
.tl-dropdown--lg %tl-dropdown-field {
  height: 56px;
  line-height: 56px;
  padding-top: 0;
  padding-bottom: 0;
}

.tl-dropdown--md %tl-dropdown-field {
  height: 48px;
  line-height: 48px;
}

.tl-dropdown--sm %tl-dropdown-field {
  height: 40px;
  min-height: 40px;
  line-height: 40px;
}

// --- State: Disabled ---
.tl-dropdown--disabled .tl-dropdown__button,
.tl-dropdown--disabled .tl-dropdown__select,
.tl-dropdown--disabled .tl-dropdown__input {
  color: var(--dropdown-disabled);
  background: var(--dropdown-background);
  border-color: var(--dropdown-border-disabled, transparent);
  border-width: var(--dropdown-border-width, 0 0 1px 0);
  cursor: not-allowed;
  pointer-events: none;
}

// --- State: Error ---
.tl-dropdown--error .tl-dropdown__button:focus,
.tl-dropdown--error .tl-dropdown__button:focus-visible,
.tl-dropdown--error .tl-dropdown__select:focus,
.tl-dropdown--error .tl-dropdown__select:focus-visible,
.tl-dropdown--error .tl-dropdown__input:focus,
.tl-dropdown--error .tl-dropdown__input:focus-visible {
  border-color: var(--dropdown-border-error-focus);
  border-width: var(
    --dropdown-border-error-focus-width,
    var(--dropdown-border-focus-width, 0 0 2px 0)
  );
  outline: none;
  box-shadow: none;
  cursor: not-allowed;
}

.tl-dropdown--error .tl-dropdown__button,
.tl-dropdown--error .tl-dropdown__input,
.tl-dropdown--error .tl-dropdown__select {
  border-bottom-color: var(--dropdown-error);
}

// --- State: Hover ---
.tl-dropdown__button:hover,
.tl-dropdown__select:hover,
.tl-dropdown__input:hover {
  border-color: var(--dropdown-border-hover);
  border-width: var(--dropdown-border-width-hover, 0 0 2px 0);
}

// --- State: Focus ---
.tl-dropdown__button:focus,
.tl-dropdown__button:focus-visible,
.tl-dropdown__select:focus,
.tl-dropdown__select:focus-visible,
.tl-dropdown__input:focus,
.tl-dropdown__input:focus-visible {
  border-color: var(--dropdown-border-focus);
  border-width: var(--dropdown-border-focus-width, var(--dropdown-border-width-hover, 0 0 2px 0));
  outline: none;
  box-shadow: none;
}

// --- Placeholder color for select ---
.tl-dropdown:has(.tl-dropdown__select option[value='']:checked) .tl-dropdown__select {
  color: var(--dropdown-placeholder);
}

// --- Special padding for sm/label-inside ---
.tl-dropdown--sm:has(.tl-dropdown__select option:not([value='']):checked)
.tl-dropdown--label-inside
.tl-dropdown__select {
  padding-top: var(--tds-spacing-element-20);
  padding-bottom: 12px;
  line-height: calc(56px - var(--tds-spacing-element-20) - 12px);
}

// --- Dropdown value & placeholder ---
.tl-dropdown__button-value,
.tl-dropdown__button-placeholder,
.tl-dropdown__input-value,
.tl-dropdown__input-placeholder {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  flex: 1 1 auto;
  min-width: 0;
}

// Special case: sm + label-inside + has-value
.tl-dropdown--sm.tl-dropdown--label-inside.tl-dropdown--has-value .tl-dropdown__button-value,
.tl-dropdown--sm.tl-dropdown--label-inside.tl-dropdown--has-value .tl-dropdown__input-value {
  position: absolute;
  left: var(--tds-spacing-element-16);
  right: 32px;
  top: 50%;
  transform: translateY(-50%);
  background: transparent;
}

// Hide value if label-inside and no value
.tl-dropdown--label-inside:not(.tl-dropdown--has-value) .tl-dropdown__button-value,
.tl-dropdown--label-inside:not(.tl-dropdown--has-value) .tl-dropdown__input-value {
  display: none;
}

// Placeholder styles
.tl-dropdown__button-placeholder,
.tl-dropdown__input-placeholder {
  color: var(--dropdown-placeholder);
  border: none;
  border-radius: var(--dropdown-border-radius);
  box-shadow: none;
  border-bottom: none;
  transition: border-color 0.2s;

  // State: hover
  &:hover {
    border-color: var(--dropdown-border-hover);
  }

  // State: focus
  &:focus,
  &:focus-visible {
    border-color: var(--dropdown-border-focus);
    outline: none;
    box-shadow: none;
  }

  // State: error
  &.tl-dropdown--error {
    border-color: var(--dropdown-border-error);
  }

  // State: disabled
  &:disabled {
    border-color: transparent;
    background-color: var(--dropdown-background);
    color: var(--dropdown-disabled);
    cursor: not-allowed;
  }
}

// Special case: label-inside + has-value
.tl-dropdown--label-inside.tl-dropdown--has-value .tl-dropdown__button-value,
.tl-dropdown--label-inside.tl-dropdown--has-value .tl-dropdown__input-value {
  position: relative;
  display: inline;
}

//error
.tl-dropdown--error:not(.tl-dropdown--disabled) {
  --dropdown-border: var(--dropdown-border-error);
  --dropdown-border-hover: var(--dropdown-border-error-hover);
  --dropdown-helper-text: var(--dropdown-error);
  --dropdown-bar-base-color: var(--dropdown-bar-error);
}

// --- LABEL INSIDE ---
// This rule is already covered by the :focus rule above, removing duplicate

.tl-dropdown__label--inside {
  position: absolute;
  left: var(--tds-spacing-element-16);
  width: auto;
  pointer-events: none;
  background: transparent;
  z-index: 1;
  transition: transform 0.15s, font-size 0.15s, color 0.15s, top 0.15s;
  transform-origin: top left;
  color: var(--dropdown-label-inside);
  @include detail-02;

  top: var(--dropdown-label-top, 50%);
  transform: translateY(-50%);
}

// Center label when no value
.tl-dropdown--label-inside:not(.tl-dropdown--has-value) .tl-dropdown__label--inside,
.tl-dropdown--lg.tl-dropdown--label-inside:not(.tl-dropdown--has-value)
.tl-dropdown__label--inside {
  top: 50%;
  transform: translateY(-50%);
}

// Input: label jumps up on focus regardless of value
.tl-dropdown--label-inside .tl-dropdown__input:focus ~ .tl-dropdown__label--inside {
  @include detail-07;

  color: var(--dropdown-label-inside-active, var(--dropdown-label-inside));
  top: var(--dropdown-label-top, 7px);
  transform: none;
}

// Hide placeholder when label-inside is present (like tl-text-field)
.tl-dropdown--label-inside .tl-dropdown__input::placeholder,
.tl-dropdown--label-inside .tl-dropdown__button::placeholder {
  color: transparent;
}

// Helper shifts label up
.tl-dropdown--label-inside:has(.tl-dropdown__helper):not(.tl-dropdown--has-value)
.tl-dropdown__label--inside {
  top: calc(50% - 10px);
}

.tl-dropdown--label-inside:has(.tl-dropdown__helper):has(
.tl-dropdown__select option:not([value='']):checked
) {
  --dropdown-label-top: calc(50% - 22px);
}

.tl-dropdown--label-inside:has(.tl-dropdown__helper):has(
.tl-dropdown__select option:not([value='']):checked
)
.tl-dropdown__label--inside {
  top: var(--dropdown-label-top);
}

// Label active state (has value)

// Label transforms and shrinks above input/select/button when value is present or field is focused
.tl-dropdown--label-inside.tl-dropdown--has-value .tl-dropdown__label--inside {
  @include detail-07;

  color: var(--dropdown-label-inside-active, var(--dropdown-label-inside));
  top: var(--dropdown-label-top, 7px);
  transform: none;
}

// In sm, label disappears completely when value is present or input is focused
.tl-dropdown--sm.tl-dropdown--label-inside.tl-dropdown--has-value .tl-dropdown__label--inside,
.tl-dropdown--sm.tl-dropdown--label-inside .tl-dropdown__input:focus ~ .tl-dropdown__label--inside,
.tl-dropdown--sm.tl-dropdown--label-inside
.tl-dropdown__input:not(:placeholder-shown)
~ .tl-dropdown__label--inside {
  display: none;
}

// Hide label for sm+inside+has-value
.tl-dropdown--sm.tl-dropdown--label-inside.tl-dropdown--has-value .tl-dropdown__label--inside {
  display: none;
}

// Size overrides
.tl-dropdown--lg.tl-dropdown--label-inside .tl-dropdown__label--inside {
  top: 12px;
}

// Field padding for label-inside

.tl-dropdown--md.tl-dropdown--label-inside .tl-dropdown__button,
.tl-dropdown--md.tl-dropdown--label-inside .tl-dropdown__select {
  padding-top: var(--tds-spacing-element-20);
  padding-bottom: 8px;
  line-height: calc(48px - var(--tds-spacing-element-20) - 11px);
}

.tl-dropdown--lg.tl-dropdown--label-inside %tl-dropdown-field {
  padding-top: var(--tds-spacing-element-20);
  padding-bottom: 8px;
  line-height: calc(48px - var(--tds-spacing-element-20) - 11px);
}

.tl-dropdown--sm.tl-dropdown--label-inside %tl-dropdown-field {
  padding-top: var(--tds-spacing-element-16);
  padding-bottom: var(--tds-spacing-element-8);
  line-height: calc(40px - var(--tds-spacing-element-16) - var(--tds-spacing-element-8));
}

.tl-dropdown--sm.tl-dropdown--label-inside:has(.tl-dropdown__select option:not([value='']):checked)
%tl-dropdown-field {
  padding-top: 0;
  padding-bottom: 0;
  line-height: 40px;
}

// Disabled label
.tl-dropdown--disabled .tl-dropdown__label {
  color: var(--color-foreground-text-disabled);
}

// Outside label
.tl-dropdown__label--outside {
  @include detail-05;
}

// Base label
.tl-dropdown__label {
  color: var(--dropdown-text);
  display: block;
  margin-bottom: var(--tds-spacing-element-4);
}

// Label animation on value
.tl-dropdown:has(.tl-dropdown__select option:not([value='']):checked) {
  --dropdown-label-transform: translateY(0);
  --dropdown-label-top: 8px;
}

.tl-dropdown:has(.tl-dropdown__select option:not([value='']):checked) .tl-dropdown__label--inside {
  @include detail-07;
}

.tl-dropdown--lg:has(.tl-dropdown__select option:not([value='']):checked) {
  --dropdown-label-top: 8px;
}

// Chevron rotation modifier (scoped to dropdown component only)
.tl-dropdown .tl-icon--chevron_down--rotated {
  transform: rotate(180deg);
}

// List
.tl-dropdown__list {
  position: absolute;
  left: 0;
  right: 0;
  top: 100%;
  z-index: 9999;
  width: 100%;
  background: var(--dropdown-background);
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
  border-radius: var(--dropdown-border-radius, 8px);
  margin: 0;
  padding: 0;
  list-style: none;
  max-height: 320px;
  overflow-y: auto;
  transform-origin: top;
  transform: scaleY(0);
  pointer-events: none;
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

// Dropdown list open/closed states (BEM modifiers)
.tl-dropdown__list {
  transform: scaleY(0);
  pointer-events: none;
  display: none;
  visibility: hidden;
}

.tl-dropdown__list--open {
  display: block;
  visibility: visible;
  transform: scaleY(1);
  pointer-events: auto;
}

// Dropdown list with helper shifts position
.tl-dropdown:has(.tl-dropdown__helper) .tl-dropdown__list {
  transform: translateY(-20px) scaleY(0);
  display: none;
  visibility: hidden;
}

.tl-dropdown:has(.tl-dropdown__helper) .tl-dropdown__list--open {
  transform: translateY(-20px) scaleY(1);
  display: block;
  visibility: visible;
  pointer-events: auto;
}

//option

// Option base styles
.tl-dropdown__option,
option {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  padding-left: 16px;
  padding-right: var(--tds-spacing-element-16);
  gap: 8px;
  height: 48px;
  line-height: 48px;
  cursor: pointer;
  color: var(--dropdown-text);
  background: none;
  border: none;
  text-align: left;
  width: 100%;
  box-sizing: border-box;
  transition: background 0.15s, color 0.15s;
  outline: none;
  list-style: none;
  border-bottom: 1px solid var(--dropdown-option-border);
  position: relative;
}

// Option focus (accessibility)
.tl-dropdown__option:focus-visible {
  border: 2px solid var(--dropdown-border-focus);
  z-index: 2;
}

// Option hover
.tl-dropdown__option:hover,
option:hover {
  background: var(--dropdown-option-background-hover);
}

// Option selected
// Option selected (BEM)
.tl-dropdown__option--selected,
.tl-dropdown__option--selected,
option:checked,
option[selected] {
  background: var(--dropdown-option-background-selected);
  color: var(--dropdown-text);
}

// Option selected position
.tl-dropdown__option[aria-selected='true'] {
  position: relative;
}

// Option disabled
// Option disabled (BEM)
.tl-dropdown__option--disabled {
  color: var(--dropdown-disabled);
  cursor: not-allowed;
  background: var(--dropdown-background);
  border-color: var(--dropdown-border-disabled, transparent);
  opacity: 0.6;
  pointer-events: none;
}

// Tick icon within dropdown options (scoped to dropdown component)
.tl-dropdown__option .tl-icon--tick {
  position: absolute;
  right: var(--tds-spacing-element-16);
  top: 0;
  bottom: 0;
  margin: auto 0;
  width: 16px;
  height: 16px;
  color: var(--dropdown-icon);
  pointer-events: none;
  display: none; // Hidden by default
}

.tl-dropdown__option--selected .tl-icon--tick {
  display: inline-flex; // Show only when option is selected
}

.tl-dropdown__option .tl-checkbox {
  justify-content: start;
  pointer-events: none;
}

// Helper
.tl-dropdown__helper {
  @include detail-05;

  color: var(--dropdown-helper-text);
  padding-top: var(--tds-spacing-element-4);
  display: flex;
  gap: 8px;
  flex-basis: 100%;
  z-index: 1;

  .tl-dropdown--disabled & {
    color: var(--color-foreground-text-disabled);
  }
}

// Chevron positioning for different label configurations

// Outside label without helper: chevron should be centered in input field only
.tl-dropdown:not(.tl-dropdown--no-label):not(.tl-dropdown--label-inside):not(
:has(.tl-dropdown__helper)
)
.tl-dropdown__select
~ .tl-icon--chevron_down {
  top: calc(50% + 12px); // Select needs more offset
  bottom: auto;
  transform: translateY(-50%);
  margin: 0;
}

.tl-dropdown:not(.tl-dropdown--no-label):not(.tl-dropdown--label-inside):not(
:has(.tl-dropdown__helper)
)
.tl-dropdown__button
~ .tl-icon--chevron_down,
.tl-dropdown:not(.tl-dropdown--no-label):not(.tl-dropdown--label-inside):not(
:has(.tl-dropdown__helper)
)
.tl-dropdown__input
~ .tl-icon--chevron_down {
  top: 50%; // Standard offset for button/input
  bottom: auto;
  transform: translateY(-50%);
  margin: 0;
}

// No label or inside label: chevron centered in whole component (default behavior)
.tl-dropdown--no-label .tl-icon--chevron_down,
.tl-dropdown--label-inside .tl-icon--chevron_down {
  top: 0;
  bottom: 0;
  margin: auto 0;
  transform: rotate(0deg);
}

// When helper exists, adjust positioning slightly up
.tl-dropdown--no-label:has(.tl-dropdown__helper) .tl-icon--chevron_down,
.tl-dropdown--label-inside:has(.tl-dropdown__helper) .tl-icon--chevron_down {
  top: 0;
}

// Special positioning for select with helper
.tl-dropdown--no-label:has(.tl-dropdown__helper) .tl-dropdown__select ~ .tl-icon--chevron_down,
.tl-dropdown--label-inside:has(.tl-dropdown__helper) .tl-dropdown__select ~ .tl-icon--chevron_down {
  top: -25%;
}

// --- Animated underline bar ---
.tl-dropdown__bar {
  position: relative;
  width: 100%;
  height: 0;
  z-index: 1;

  // Static underline
  &::before {
    content: '';
    position: absolute;
    inset-block-end: 0;
    inset-inline-start: 0;
    height: 1px;
    inline-size: 100%;
    background-color: var(--dropdown-bar-base-color);
    z-index: 0;
  }

  // Animated bar
  &::after {
    content: '';
    position: absolute;
    inset-block-end: 0;
    inset-inline-start: 0;
    height: 2px;
    background-color: var(--dropdown-bar-focus);
    inline-size: 100%;
    transform: scaleX(0);
    transform-origin: center;
    transition: transform 0.35s ease;
    z-index: 1;
  }

  // Error state
  .tl-dropdown--error:not(.tl-dropdown--disabled) &::after {
    background-color: var(--dropdown-bar-error);
  }
}

// Bar animation states
.tl-dropdown:has(:is(.tl-dropdown__select, .tl-dropdown__button):focus):not(.tl-dropdown--disabled)
.tl-dropdown__bar::after,
.tl-dropdown:has(:is(.tl-dropdown__select, .tl-dropdown__input):focus):not(.tl-dropdown--disabled)
.tl-dropdown__bar::after {
  transform: scaleX(1);
}

.tl-dropdown--disabled .tl-dropdown__bar::after {
  transform: scaleX(0);
}

.tl-dropdown--disabled .tl-dropdown__bar::before {
  background-color: transparent;
}

.tl-dropdown--disabled {
  pointer-events: none;

  --dropdown-text: var(--dropdown-disabled);
  --dropdown-helper-text: var(--dropdown-disabled);
  --dropdown-placeholder: var(--dropdown-disabled);
  --dropdown-icon: var(--dropdown-disabled);
  --dropdown-bar-color: transparent;
  --dropdown-bar-base-color: transparent;
  --dropdown-border: transparent;
  --dropdown-border-hover: transparent;
}

.tl-dropdown--error:not(.tl-dropdown--disabled) {
  --dropdown-border: var(--dropdown-border-error);
  --dropdown-border-hover: var(--dropdown-border-error-hover);
  --dropdown-helper-text: var(--dropdown-error);
  --dropdown-bar-base-color: var(--dropdown-bar-error);
}

// Additional BEM classes for pure CSS-driven functionality

// Demo wrapper
.demo-wrapper {
  max-width: 208px;
  height: 150px;
}

// Option visibility
.tl-dropdown__option--visible {
  display: flex;
}

.tl-dropdown__option:not(.tl-dropdown__option--visible) {
  display: none;
}

// Button value/placeholder visibility
.tl-dropdown__button-value--visible {
  display: inline;
}

.tl-dropdown__button-value:not(.tl-dropdown__button-value--visible) {
  display: none;
}

.tl-dropdown__button-placeholder--visible {
  display: inline;
}

.tl-dropdown__button-placeholder:not(.tl-dropdown__button-placeholder--visible) {
  display: none;
}
