@import './_tl-dropdown_vars';
@import '../tl-icon/tl-icon';
@import '../../../../../../typography/mixins/type-styles';

.tl-dropdown {
  display: block;
  min-width: 208px;
  position: relative;

  // Chevron icon rendered via CSS mask to avoid extra markup
  &::after {
    content: '';
    position: absolute;
    inset-block-start: 50%;
    inset-inline-end: var(--tds-spacing-element-16);
    width: 1rem;
    height: 1rem;
    pointer-events: none;
    transform: translateY(calc(-50% - var(--tds-spacing-element-4)));
    background-color: var(--dropdown-icon);
    mask-image: var(--icon-chevron_down-svg);
    mask-repeat: no-repeat;
    mask-position: center;
    mask-size: contain;
    mask-image: var(--icon-chevron_down-svg);
    mask-repeat: no-repeat;
    mask-position: center;
    mask-size: contain;
  }

  // Modifier: remove min-width restriction
  &--no-min-width {
    min-width: auto;
  }

  &--primary {
    --dropdown-background: var(--color-background-layer-01);
    --dropdown-option-background: var(--color-background-layer-01);
  }

  &--secondary {
    --dropdown-background: var(--color-background-layer-02);
    --dropdown-option-background: var(--color-background-layer-02);
    --dropdown-option-background-hover: var(
      --color-background-layer-03,
      var(--color-background-layer-02)
    );
  }

  // Disabled state
  &--disabled {
    pointer-events: none;

    --dropdown-text: var(--color-foreground-text-disabled);
    --dropdown-helper-text: var(--color-foreground-text-disabled);
    --dropdown-placeholder: var(--color-foreground-text-disabled);
    --dropdown-icon: var(--color-foreground-icon-disabled);
    --dropdown-bar-color: transparent;
    --dropdown-border: var(--dropdown-border-disabled);
    --dropdown-border-hover: var(--dropdown-border-disabled);

    .tl-dropdown__label,
    .tl-dropdown__helper {
      color: var(--color-foreground-text-disabled);
    }
  }

  &--error:not(.tl-dropdown--disabled) {
    --dropdown-border: var(--dropdown-border-error);
    --dropdown-border-hover: var(--dropdown-border-error-hover);
    --dropdown-helper-text: var(--dropdown-error);
    --dropdown-bar-color: var(--dropdown-error);
  }

  // Modifier: label displayed inside the field
  &--label-inside {
    position: relative;

    &::after {
      transform: translateY(calc(-50% - var(--tds-spacing-element-12)));
    }
  }

  // Size modifiers
  &--lg {
    &.tl-dropdown--label-inside {
      .tl-dropdown__label {
        top: var(--tds-spacing-element-16);
        left: var(--tds-spacing-element-16);
        transform: translateY(calc(var(--tds-spacing-element-24) - var(--tds-spacing-element-16)));
      }

      &:has(.tl-dropdown__input:focus) .tl-dropdown__label,
      &:not(:has(.tl-dropdown__input option[value='']:checked)) .tl-dropdown__label {
        top: calc(var(--tds-spacing-element-16) - var(--tds-spacing-element-4));
      }

      .tl-dropdown__input {
        padding-top: var(--tds-spacing-element-24);
        padding-bottom: 15px;
        line-height: calc(56px - var(--tds-spacing-element-24) - 15px);
      }
    }
  }

  &--md {
    .tl-dropdown__input {
      min-height: 48px;
      height: 48px;
      line-height: 48px;
      padding: 0 var(--tds-spacing-element-16);
      padding-right: calc(var(--tds-spacing-element-16) + 1rem);
    }

    &.tl-dropdown--label-inside {
      .tl-dropdown__label {
        top: var(--tds-spacing-element-12);
        left: var(--tds-spacing-element-16);
        transform: translateY(calc(var(--tds-spacing-element-20) - var(--tds-spacing-element-12)));
      }

      &:has(.tl-dropdown__input:focus) .tl-dropdown__label,
      &:not(:has(.tl-dropdown__input option[value='']:checked)) .tl-dropdown__label {
        top: calc(var(--tds-spacing-element-12) - var(--tds-spacing-element-4));
      }

      .tl-dropdown__input {
        padding-top: var(--tds-spacing-element-20);
        padding-bottom: 11px;
        line-height: calc(48px - var(--tds-spacing-element-20) - 11px);
      }
    }
  }

  &--sm {
    .tl-dropdown__input {
      min-height: 40px;
      height: 40px;
      line-height: 40px;
      padding: 0 var(--tds-spacing-element-12);
      padding-right: calc(var(--tds-spacing-element-12) + 1rem);
    }

    &.tl-dropdown--label-inside {
      .tl-dropdown__label {
        top: var(--tds-spacing-element-4);
        left: var(--tds-spacing-element-12);
        transform: translateY(calc(var(--tds-spacing-element-16) - var(--tds-spacing-element-4)));
      }

      &:has(.tl-dropdown__input:focus) .tl-dropdown__label,
      &:not(:has(.tl-dropdown__input option[value='']:checked)) .tl-dropdown__label {
        top: var(--tds-spacing-element-8);
        left: var(--tds-spacing-element-12);
      }

      .tl-dropdown__input {
        padding-top: var(--tds-spacing-element-16);
        padding-bottom: var(--tds-spacing-element-8);
        line-height: calc(40px - var(--tds-spacing-element-16) - var(--tds-spacing-element-8));
      }

      &::after {
        transform: translateY(calc(-50% - var(--tds-spacing-element-16)));
      }
    }
  }
}

// Label element
.tl-dropdown__label {
  @include detail-05;

  color: var(--dropdown-text);
  display: block;
  margin-bottom: var(--tds-spacing-element-4);
}

// Label tweaks when using the label-inside modifier
.tl-dropdown--label-inside .tl-dropdown__label {
  @include detail-02;

  position: absolute;
  pointer-events: none;
  transform-origin: top left;
  left: var(--tds-spacing-element-16);
  transition: transform 0.1s ease, font-size 0.1s ease, color 0.1s ease;
}

// Focused or value selected: raise label above the field
.tl-dropdown--label-inside:has(.tl-dropdown__input:focus) .tl-dropdown__label,
.tl-dropdown--label-inside:not(:has(.tl-dropdown__input option[value='']:checked))
.tl-dropdown__label {
  @include detail-07;

  transform: translateY(0);
  top: var(--tds-spacing-element-4);
  left: var(--tds-spacing-element-16);
}

// Input adjustments when label is displayed inside the field
.tl-dropdown--label-inside .tl-dropdown__input {
  padding-top: var(--tds-spacing-element-20);
  padding-bottom: 12px;
  line-height: calc(56px - var(--tds-spacing-element-20) - 12px);
}

// Native <select> element
.tl-dropdown__input {
  @include detail-02;

  width: 100%;
  appearance: none;
  background-color: var(--dropdown-background);
  color: var(--dropdown-text);
  border: none;
  border-radius: var(--tds-spacing-element-4) var(--tds-spacing-element-4) 0 0;
  box-shadow: none;
  min-height: 56px;
  height: 56px;
  line-height: 56px;
  padding: 0 var(--tds-spacing-element-16);
  padding-right: calc(var(--tds-spacing-element-16) + 1rem);

  &::placeholder {
    color: var(--dropdown-placeholder);
  }

  &:focus,
  &:focus-visible {
    outline: none;
    box-shadow: none;
  }

  &:disabled {
    background-color: var(--dropdown-background);
    color: var(--color-foreground-text-disabled);
    cursor: not-allowed;
  }

  //  Option styling reference (works on some browsers, e.g. Windows Chromium/Firefox)
  option {
    color: var(--dropdown-option-text);
    background-color: var(--dropdown-option-background);
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    text-align: left;
    padding-inline: var(--tds-spacing-element-16);
    padding-block: var(--tds-spacing-element-4);
  }

  option:checked,
  option[selected] {
    background-color: var(--dropdown-option-background-selected);
  }

  option:disabled {
    color: var(--dropdown-option-disabled);
    background-color: var(--dropdown-option-background);
  }

  option:hover {
    background-color: var(--dropdown-option-background-hover);
  }
}

// Focus state - animate underline when input is focused
.tl-dropdown:has(.tl-dropdown__input:focus):not(.tl-dropdown--disabled) .tl-dropdown__bar::after {
  transform: scaleX(1);
}

// Disabled icon
.tl-dropdown--disabled::after {
  background-color: var(--color-foreground-icon-disabled);
}

// Disabled underline
.tl-dropdown--disabled .tl-dropdown__bar::after {
  transform: scaleX(0) !important;
}

.tl-dropdown:has(.tl-dropdown__input option[value='']:checked) .tl-dropdown__input {
  color: var(--dropdown-placeholder);
}

// Animated underline
.tl-dropdown__bar {
  position: relative;
  width: 100%;
  height: 0;
  z-index: 1;

  &::after {
    content: '';
    position: absolute;
    inset-block-end: 0;
    inset-inline-start: 0;
    height: 2px;
    background-color: var(--dropdown-bar-color);
    inline-size: 100%;
    transform: scaleX(0);
    transform-origin: center;
    transition: transform 0.35s ease;
  }
}

.tl-dropdown__helper {
  @include detail-05;

  color: var(--dropdown-helper-text);
  padding-top: var(--tds-spacing-element-4);
  display: flex;
  gap: 8px;
  flex-basis: 100%;
}
