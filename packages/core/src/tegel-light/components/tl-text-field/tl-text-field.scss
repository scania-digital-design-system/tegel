@import './tl-text-field-vars';
@import './tl-text-field-mixins';
@import '../tl-icon/tl-icon';
@import '../../../../../../typography/mixins/type-styles';

.tl-text-field {
  padding-bottom: 1px;
  display: block;
  min-width: 208px;

  // Size modifiers
  &--lg {
    @include size-variant(
      56px,
      var(--tds-spacing-element-20) var(--tds-spacing-element-16),
      20px,
      var(--tds-spacing-element-24),
      15px
    );
  }

  &--md {
    @include size-variant(
      48px,
      var(--tds-spacing-element-16),
      16px,
      var(--tds-spacing-element-20),
      11px
    );
  }

  &--sm {
    @include size-variant(
      40px,
      var(--tds-spacing-element-16),
      12px,
      var(--tds-spacing-element-20),
      11px
    );
  }

  &--no-min-width {
    min-width: auto;
  }

  &--label-inside {
    @include focus-input-state {
      @include detail-07;

      transition: 0.1s ease all;
    }

    // Size-specific positioning when focused or has content
    &.tl-text-field--lg {
      @include focus-input-state {
        top: 9px;
      }
    }

    &.tl-text-field--md,
    &.tl-text-field--sm {
      @include focus-input-state {
        top: 8px;
      }
    }

    // Prefix-based label positioning
    .tl-text-field__prefix--icon ~ .tl-text-field__label-inside {
      left: calc(var(--text-field-label-inside-left) + var(--text-field-prefix-width-icon));
    }

    .tl-text-field__prefix--text ~ .tl-text-field__label-inside {
      left: calc(var(--text-field-label-inside-left) + var(--text-field-prefix-width-text));
    }
  }

  // Focus state
  .tl-text-field__content:has(.tl-text-field__input:focus):not(.tl-text-field--disabled) {
    .tl-text-field__wrapper {
      outline: var(--text-field-focus-outline);
      outline-offset: var(--text-field-focus-outline-offset);
    }
  }

  // Bar animation on focus
  .tl-text-field__content:has(.tl-text-field__input:focus):not(.tl-text-field--disabled)
  ~ .tl-text-field__bar::after {
    transform: scaleX(1);
  }

  // Disabled state
  &--disabled {
    .tl-text-field__wrapper {
      box-shadow: none;
      pointer-events: none;
    }

    // Affix elements (prefix/suffix)
    .tl-text-field__prefix--text,
    .tl-text-field__prefix--icon,
    .tl-text-field__suffix--text,
    .tl-text-field__suffix--icon {
      color: var(--text-field-affix-disabled);

      > * {
        color: var(--text-field-affix-disabled);
      }
    }

    .tl-text-field__label-outside > *,
    .tl-text-field__label-inside,
    .tl-text-field__helper,
    .tl-text-field__icon-readonly {
      color: var(--text-field-label-disabled);
    }

    .tl-text-field__input {
      background-color: var(--text-field-background-disabled);
    }

    .tl-text-field__textcounter {
      color: var(--text-field-textcounter-disabled);
    }

    // Override bar animation when disabled
    .tl-text-field__bar::after {
      transform: scaleX(0) !important;
    }

    // Label inside behavior when disabled
    &.tl-text-field--label-inside {
      .tl-text-field__label-inside {
        @include detail-07;

        top: 8px;
        transform: translateY(0);
      }

      .tl-text-field__input::placeholder {
        color: var(--text-field-placeholder) !important;
      }
    }
  }

  // Read only state
  &--readonly {
    user-select: auto;
    caret-color: transparent;
    cursor: default;

    .tl-text-field__wrapper {
      border-bottom-color: var(--text-field-border-bottom-readonly);
    }

    .tl-text-field__icon-readonly {
      display: block;

      &:hover ~ .tl-text-field__icon-readonly-label {
        display: block;
      }
    }

    .tl-text-field__input {
      background-color: transparent;
    }

    // Only add padding if readonly icon is present
    &:has(.tl-text-field__icon-readonly) .tl-text-field__input {
      padding-right: 54px;
    }
  }

  // Success state
  &--success:not(.tl-text-field--readonly):not(.tl-text-field--disabled) {
    .tl-text-field__wrapper {
      box-shadow: var(--text-field-box-shadow-success);
    }
  }

  // Error State
  &--error:not(.tl-text-field--readonly):not(.tl-text-field--disabled) {
    .tl-text-field__helper,
    .tl-text-field__textcounter {
      color: var(--text-field-helper-error);
    }

    .tl-text-field__wrapper {
      box-shadow: var(--text-field-box-shadow-error);
    }

    .tl-text-field__bar::before,
    .tl-text-field__bar::after {
      background: var(--text-field-bar-error);
    }
  }

  // Error state focus
  .tl-text-field__content:has(.tl-text-field__input:focus).tl-text-field--error:not(
  .tl-text-field--disabled
) {
    .tl-text-field__wrapper {
      outline: var(--text-field-focus-outline-error);
      outline-offset: var(--text-field-focus-outline-offset);
    }
  }
}

// Elements
.tl-text-field__wrapper {
  box-shadow: var(--text-field-box-shadow), 0 1px 0 0 rgba(0, 0, 0, 0.2);
  border-radius: var(--text-field-border-radius);
  position: relative;
  height: 56px;
  box-sizing: border-box;
  background-color: var(--text-field-background);
  transition: box-shadow 200ms ease;

  &:hover {
    box-shadow: var(--text-field-box-shadow-hover);
  }
}

.tl-text-field__content {
  position: relative;
  width: 100%;
  display: flex;
  align-items: center;
  height: 100%;
}

.tl-text-field__input {
  @include text-field-base;
  @include detail-02;

  color: var(--text-field-text);
  flex: 1;
  order: 2;
}

.tl-text-field__label-outside > * {
  @include detail-05;

  display: block;
  margin-bottom: var(--tds-spacing-element-8);
  color: var(--text-field-label);
}

.tl-text-field__label-inside {
  @include detail-02;

  position: absolute;
  pointer-events: none;
  color: var(--text-field-label-inside);
  left: var(--text-field-label-inside-left, 16px);
  transition: all 0.1s ease;
  z-index: 1;

  // Initial positioning for different sizes
  .tl-text-field--lg & {
    top: 20px;
  }

  .tl-text-field--md & {
    top: 16px;
  }

  .tl-text-field--sm & {
    top: 12px;
  }
}

.tl-text-field__bar {
  position: relative;
  width: 100%;
  left: 0;
  z-index: 1;

  &::after {
    background: var(--text-field-bar-focus);
    content: '';
    height: 2px;
    width: 100%;
    bottom: 0;
    position: absolute;
    transform: scaleX(0);
    transition: 0.35s ease transform;
  }
}

.tl-text-field__helper {
  @include detail-05;

  color: var(--text-field-helper);
  padding-top: var(--tds-spacing-element-4);
  display: flex;
  gap: 8px;
  flex-basis: 100%;

  .tl-text-field__textcounter {
    margin-left: auto;
  }
}

.tl-text-field__textcounter {
  @include detail-02;

  color: var(--text-field-textcounter);
  float: right;

  &--disabled {
    color: var(--text-field-textcounter-disabled);
  }

  &--divider {
    @include detail-05;

    color: var(--text-field-textcounter-divider);

    &--disabled {
      color: var(--text-field-textcounter-divider);
    }
  }
}

.tl-text-field__prefix {
  @include affix-base;

  &--text,
  &--icon {
    margin: 0 0 0 16px;
    order: 1;
  }
}

.tl-text-field__suffix {
  @include affix-base;

  &--text,
  &--icon {
    margin: 0 14px 0 0;
    order: 3;
  }
}

.tl-text-field__icon-readonly {
  display: none;
  position: absolute;
  right: 18px;
  top: 50%;
  transform: translateY(-50%);
}
