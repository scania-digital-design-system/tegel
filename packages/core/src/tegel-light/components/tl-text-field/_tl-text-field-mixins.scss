@import '../../../../../../typography/utilities/typography-utility';

// Mixins
@mixin text-field-base {
  all: unset;
  border-radius: var(--text-field-border-radius);
  background-color: var(--text-field-background);
  color: var(--text-field-text);
  width: 100%;
  box-sizing: border-box;
  margin: 0;
  border: none;
  outline: none;
  height: 100%;

  &::placeholder {
    color: var(--text-field-placeholder);
  }

  &:disabled {
    background-color: var(--text-field-background-disabled);
    color: var(--text-field-text-disabled);
    user-select: none;
    pointer-events: none;

    &::placeholder {
      color: var(--text-field-placeholder-disabled);
    }
  }
}

@mixin placeholder-label {
  &::placeholder {
    color: transparent;
  }

  ::placeholder {
    color: transparent;
  }

  &:focus::placeholder {
    transition: color 0.35s ease;
    color: var(--text-field-placeholder);
  }
}

@mixin box-shadow($state: '') {
  $suffix: if($state != '', '-#{$state}', '');

  box-shadow: var(--text-field-box-shadow#{$suffix});
}

@mixin affix-base {
  @include detail-02;

  color: var(--text-field-affix);
  align-self: center;
  display: flex;
  align-items: center;
  z-index: 1;
  height: 100%;
  position: relative;
}

// Mixin for focus/input state selectors
@mixin focus-input-state {
  .tl-text-field__content:has(.tl-text-field__input:focus) .tl-text-field__label-inside,
  .tl-text-field__content:has(.tl-text-field__input:not(:placeholder-shown))
  .tl-text-field__label-inside {
    @content;
  }
}

// Mixin for size variants
@mixin size-variant(
  $height,
  $input-padding,
  $label-top,
  $label-inside-padding-top,
  $label-inside-padding-bottom
) {
  // This mixin is used in modifiers and affects other elements
  // The actual styles are applied in the affected element selectors
}
