@import '../../../mixins/box-sizing';
@import './tl-spinner-vars';

.tl-spinner {
  @include tds-box-sizing;

  display: block;

  &--xs {
    --tl-spinner-radius: var(--tl-spinner-radius-xs);
    --tl-spinner-stroke-width: var(--tl-spinner-stroke-width-xs);
    --tl-spinner-animation-speed: var(--tl-spinner-speed);
  }

  &--sm {
    --tl-spinner-radius: var(--tl-spinner-radius-sm);
    --tl-spinner-stroke-width: var(--tl-spinner-stroke-width-sm);
    --tl-spinner-animation-speed: var(--tl-spinner-speed);
  }

  &--md {
    --tl-spinner-radius: var(--tl-spinner-radius-md);
    --tl-spinner-stroke-width: var(--tl-spinner-stroke-width-md);
    --tl-spinner-animation-speed: var(--tl-spinner-speed);
  }

  &--lg {
    --tl-spinner-radius: var(--tl-spinner-radius-lg);
    --tl-spinner-stroke-width: var(--tl-spinner-stroke-width-lg);
    --tl-spinner-animation-speed: var(--tl-spinner-speed-lg);
  }

  &--standard {
    stroke: var(--tl-spinner-background);
  }

  &--inverted {
    stroke: var(--tl-spinner-background-inverted);
  }
}

.tl-spinner__svg {
  display: block;
  width: calc(var(--tl-spinner-radius) * 2);
  height: calc(var(--tl-spinner-radius) * 2);
  transform: scale(-1, 1) rotate(-90deg);
}

.tl-spinner__circle {
  cx: var(--tl-spinner-radius);
  cy: var(--tl-spinner-radius);
  r: calc(var(--tl-spinner-radius) - (var(--tl-spinner-stroke-width) / 2));
  fill: none;

  --tl-spinner-stroke-dash: calc((2 * var(--tl-spinner-PI)) * var(--tl-spinner-radius));

  stroke-dasharray: var(--tl-spinner-stroke-dash);
  stroke-width: var(--tl-spinner-stroke-width);
  animation: tl-spinner-dash var(--tl-spinner-animation-speed) cubic-bezier(0.55, 0.15, 0.45, 0.85)
    infinite;
}

@keyframes tl-spinner-dash {
  from {
    stroke-dashoffset: calc(-1 * var(--tl-spinner-stroke-dash));
  }

  to {
    stroke-dashoffset: var(--tl-spinner-stroke-dash);
  }
}
