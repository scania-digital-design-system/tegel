@import '../../../mixins/box-sizing';
@import '../../../../../../typography/utilities/typography-utility';
@import './tl-stepper-vars';

@mixin divider {
  content: ' ';
  position: absolute;
  background-color: var(--stepper-divider-line);
}

/* :host → .tl-step */
.tl-stepper__step {
  position: relative;
  display: table-cell;

  /* First/last trimming (unchanged from WC) */
  &:last-of-type {
    .tl-stepper__step-content--horizontal {
      padding-right: 0;
    }

    .tl-stepper__step-content--sm,
    .tl-stepper__step-content--lg,
    [role='listitem'].sm,
    [role='listitem'].lg {
      &::after {
        display: none;
      }
    }

    .tl-stepper__step-content--sm.vertical,
    [role='listitem'].sm.vertical {
      &::before {
        display: none;
      }
    }
  }

  &:first-of-type {
    .tl-stepper__step-content--horizontal {
      padding-left: 0;
    }

    .tl-stepper__step-content--sm,
    .tl-stepper__step-content--lg,
    [role='listitem'].sm,
    [role='listitem'].lg {
      &::before {
        display: none;
      }
    }
  }
}

.tl-stepper__step-content {
  display: flex;
  justify-content: start;
  flex-direction: row;
  align-items: center;
  gap: 8px;

  /* text-below → column layout */
  &--text-below {
    flex-direction: column;
  }

  /* === LARGE ========================================================== */
  &--lg {
    padding: 0 20px;
    @include detail-01;

    .tl-stepper__step-node {
      height: 30px;
      min-width: 30px;
    }

    /* vertical connectors (same element has --lg AND --vertical) */
    &.tl-stepper__step-content--vertical {
      &::after {
        @include divider;

        height: 36px;
        width: 1px;
        top: 40px;
        left: 36px;
      }
    }

    /* horizontal connectors (same element has --lg AND --horizontal) */
    &.tl-stepper__step-content--horizontal {
      &::after {
        @include divider;

        height: 1px;
        left: calc(50% + 24px);
        right: 0;
        top: 16px;
      }

      &::before {
        @include divider;

        height: 1px;
        right: calc(50% + 24px);
        left: 0;
        top: 16px;
      }

      /* short 10px caps only when labels are visible */
      &.tl-stepper__step-content--text-aside {
        &:not(.tl-stepper__step-content--hide-labels) {
          &::after {
            @include divider;

            height: 1px;
            top: 16px;
            width: 10px;
            left: auto;
            right: -10px;
          }

          &::before {
            @include divider;

            height: 1px;
            top: 16px;
            width: 10px;
            left: -10px;
            right: auto;
          }
        }
      }
    }
  }

  /* === SMALL ========================================================== */
  &--sm {
    padding: 0 20px;
    @include detail-05;

    .index-container {
      vertical-align: -webkit-baseline-middle;
      vertical-align: -moz-middle-with-baseline;
    }

    .tl-stepper__step-node {
      height: 24px;
      min-width: 24px;
    }

    .tl-icon {
      vertical-align: -webkit-baseline-middle;
      vertical-align: -moz-middle-with-baseline;
      margin-top: -2px;
    }

    /* vertical connectors (same element has --sm AND --vertical) */
    &.tl-stepper__step-content--vertical {
      &::after {
        @include divider;

        height: 20px;
        width: 1px;
        top: 34px;
        left: 32px;
      }

      &::before {
        @include divider;

        height: 20px;
        width: 1px;
        top: 34px;
        left: 32px;
      }
    }

    /* horizontal connectors (same element has --sm AND --horizontal) */
    &.tl-stepper__step-content--horizontal {
      &::after {
        @include divider;

        height: 1px;
        left: calc(50% + 16px + 8px);
        right: 0;
        top: 13px;
      }

      &::before {
        @include divider;

        height: 1px;
        left: 0;
        right: calc(50% + 24px);
        top: 13px;
      }

      /* short caps only when labels are visible */
      &.tl-stepper__step-content--text-aside {
        &:not(.tl-stepper__step-content--hide-labels) {
          &::after {
            @include divider;

            height: 1px;
            top: 13px;
            width: 10px;
            left: auto;
            right: -10px;
          }

          &::before {
            @include divider;

            height: 1px;
            top: 13px;
            width: 10px;
            left: -10px;
            right: auto;
          }
        }
      }
    }
  }

  /* === NODE STATES ===================================================== */
  .tl-stepper__step-node {
    display: flex;
    align-items: center;
    justify-content: space-around;
    border-radius: 100px;
    border-width: 1px;
    border-style: solid;
    text-align: center;
    position: relative;

    &--error {
      border-color: var(--stepper-icon-step-border-warning);
      color: var(--stepper-icon-step-border-warning);
    }

    &--success {
      background-color: var(--stepper-icon-step-border-success);
      border-color: var(--stepper-icon-step-border-success);
      color: var(--steper-icon-step-checkmark);
    }

    &--current {
      color: var(--stepper-current-number-with-border);
    }

    &--upcoming {
      border-color: var(--stepper-label-border-upcoming);
      color: var(--stepper-label-text-upcoming);
    }
  }

  /* === LABEL =========================================================== */
  .label,
  .tl-stepper__step-label {
    text-align: center;

    &--lg {
      @include detail-01;
    }

    &--sm {
      @include detail-05;
    }

    &--upcoming {
      color: var(--stepper-label-text-upcoming);
      opacity: var(--tds-stepper-label-text-opacity-upcoming);
    }
  }
}

/* Container-wide toggle (works for all orientations) */
.tl-stepper--hide-labels {
  .tl-stepper__step-label {
    position: absolute;
    inline-size: 1px;
    block-size: 1px;
    margin: -1px;
    padding: 0;
    border: 0;
    overflow: hidden;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    white-space: nowrap;
  }

  /* Remove node/label gap when hidden */
  .tl-stepper__step-content {
    gap: 0;
  }
}

/* Per-step flag also supported (your story adds `hide-labels` to content) */
.tl-stepper__step-content {
  .tl-stepper__step-content--hide-labels {
    gap: 0;

    .tl-stepper__step-label {
      position: absolute;
      inline-size: 1px;
      block-size: 1px;
      margin: -1px;
      padding: 0;
      border: 0;
      overflow: hidden;
      clip: rect(0 0 0 0);
      clip-path: inset(50%);
      white-space: nowrap;
    }
  }
}
