name: Beta Release @scania/tegel-angular-17

on:
  workflow_dispatch:
    inputs:
      nodeVersion:
        description: 'Node version'
        required: true
        default: '20.9.0'
        type: string

      betaVersionSuffix:
        description: 'Beta version suffix (e.g., beta.0, beta.1)'
        required: true
        default: 'beta.0'
        type: string

      tegelVersion:
        description: 'Version of @scania/tegel to use (e.g., 1.16.0-beta.0)'
        required: true
        type: string

jobs:
  release-angular-17:
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: packages/angular-17
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.nodeVersion }}
          registry-url: 'https://registry.npmjs.org'

      - name: Set Tegel user
        run: git config --global user.name "Tegel - Scania" && git config --global user.email "tegel.design.system@gmail.com"

      - name: Angular-17 - Read package.json Version
        id: version
        working-directory: packages/angular-17/projects/components
        run: echo "PACKAGE_VERSION=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Install dependencies in root
        run: npm install

      - name: Core - Install
        working-directory: packages/core
        run: npm install

      - name: Angular-17 workspace - Install
        working-directory: packages/angular-17
        run: npm install

      - name: Update @scania/tegel peerDependency in Angular-17 workspace
        working-directory: packages/angular-17
        run: |
          echo "Updating @scania/tegel to version ${{ inputs.tegelVersion }} in package.json"
          jq ".peerDependencies[\"@scania/tegel\"] = \"${{ inputs.tegelVersion }}\"" package.json > package.tmp.json
          mv package.tmp.json package.json

      - name: Angular-17 wrapper - Install
        working-directory: packages/angular-17/projects/components
        run: npm install

      - name: Update @scania/tegel peerDependency and version in Angular-17 wrapper
        working-directory: packages/angular-17/projects/components
        run: |
          echo "Updating @scania/tegel to version ${{ inputs.tegelVersion }} and setting package version"
          jq ".peerDependencies[\"@scania/tegel\"] = \"${{ inputs.tegelVersion }}\" | .version = \"${{ inputs.tegelVersion }}-${{ inputs.betaVersionSuffix }}\"" package.json > package.tmp.json
          mv package.tmp.json package.json

      - name: Install @scania/tegel as dev dependency for build
        working-directory: packages/angular-17/projects/components
        run: npm install @scania/tegel@${{ inputs.tegelVersion }} --save-dev

      - name: Angular-17 - Run build
        run: npm run build-angular-17

      - name: Angular-17 - Publish
        working-directory: packages/angular-17/dist/components
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access public --tag beta

      - name: Create git tag
        run: git tag @scania/tegel-angular-17@${{ inputs.tegelVersion }}-${{ inputs.betaVersionSuffix }}

      - name: Push git tag
        run: git push --no-verify origin @scania/tegel-angular-17@${{ inputs.tegelVersion }}-${{ inputs.betaVersionSuffix }}

    outputs:
      version: ${{ steps.version.outputs.PACKAGE_VERSION }}

  on-failure:
    needs: release-angular-17
    runs-on: ubuntu-latest
    if: always() && needs.release-angular-17.result == 'failure'

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Remove git tag on failure
        run: |
          tagname="@scania/tegel-angular-17@${{ needs.release-angular-17.outputs.version }}"
          if git rev-parse $tagname >/dev/null 2>&1; then
            git push --no-verify --delete origin $tagname
          fi
